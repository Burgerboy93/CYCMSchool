#pragma checksum "C:\Users\Alistair_Holzberger\Desktop\Programming\GIT Repository\CYCMSchool\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9a01f3c9828fd59387f63dd80e661fa6d6aa4249"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Alistair_Holzberger\Desktop\Programming\GIT Repository\CYCMSchool\Views\_ViewImports.cshtml"
using CYCMSchool;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Alistair_Holzberger\Desktop\Programming\GIT Repository\CYCMSchool\Views\_ViewImports.cshtml"
using CYCMSchool.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9a01f3c9828fd59387f63dd80e661fa6d6aa4249", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7253528264574fb635554a55d5148229d24c9b94", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Alistair_Holzberger\Desktop\Programming\GIT Repository\CYCMSchool\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<p>This page provides an overview on how to use this application.</p>
<p>First, create a tutor through the Tutors screen.</p>
<p>Next add data into each of the code tables found in the Admin screen.</p>
<p>Finally, add a student under the Students screen. Once a student has been added you can select the student to view their lessons and letters.</p>
<p>Found in this area are the create lesson, and create letter buttons. Use these to create a lesson, then create a letter and select as many unpaid lessons as desired.</p>
<p>You can use the Lesson's page to view what letters the lesson has been attached to.</p>
<p>You can also then use the Letter's page to see Lessons attached to a particular letter</p>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
